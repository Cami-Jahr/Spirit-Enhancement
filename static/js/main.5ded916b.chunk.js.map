{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","data","makeMap","id","tiles","type","u_id","u_tiles","u_type","taken","best_path","handleChange","bind","handleSubmit","handleKeyPress","colours","dep","starts","Object","entries","key","value","sub","start","values","enhancementCellList","val","charaEnhancementCellId","pointX","pointY","enhancementType","keys","length","a","b","obj","array","c","max_tiles","console","log","this","memo","connectedCellIdList","c_id","b_path","sort","Comparator","entry","reduce","count","node","path","curr_val","effectValue","push","event","target","name","setState","parseInt","lines","borderColor","borderStyle","borderWidth","x0","y0","x1","y1","Y","X","colour","styleTop","position","left","top","borderBottomColor","styleMid","backgroundColor","styleBot","borderTopColor","style","className","createLines","boxes","createBox","opts","onChange","options","onKeyPress","createBoxes","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ded916b.chunk.js","sourcesContent":["import React from 'react';\nimport { Line } from 'react-lineto';\nimport data from './data/charaCard.json';\nimport \"./App.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.makeMap(data),\n      id: 3031,\n      tiles: 60,\n      type: \"ATTACK\",\n      u_id: 3031,\n      u_tiles: 60,\n      u_type: \"ATTACK\",\n      taken: {},\n    };\n    this.state.taken = this.best_path(3031, \"ATTACK\", 60)\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.colours = {\n      \"DEFENSE\": {[false]:\"#8691a7\", [true]:\"#0812a1\"},\n      \"HP\": {[false]:\"#936262\", [true]:\"#f00000\"},\n      \"ATTACK\": {[false]:\"#c8bf84\", [true]:\"#ffd22e\"},\n      \"START\": {[false]:\"#000000\", [true]:\"#000000\"},\n    }\n  }\n\n  makeMap (data) {\n    let dep = {};\n    let starts = {};\n    for (let [key, value] of Object.entries(data)) {\n      let sub = {};\n      let start = 0;\n\n      for (let val of Object.values(value.enhancementCellList)) {\n        //console.log(\"f√∏r\", val.pointX, val.pointY);\n        // TODO: Normalize off of min and max\n        sub[val.charaEnhancementCellId] = {...val, \n          pointX: 100 + (val.pointX-1150) / 2 | 0,\n          pointY: 200 +(val.pointY-1000) / 3 | 0,\n        }\n\n        if (val.enhancementType === \"START\") {\n          start = val.charaEnhancementCellId\n        }\n        //console.log(\"etter\", val.pointX, val.pointY);\n      }\n\n      if (Object.keys(sub).length !== 0){\n        dep[key] = sub\n        starts[key] = start\n      }\n    }\n    //console.log(dep);\n    //console.log(starts);\n    \n    \n    return {dep, starts};\n  }\n\n  Comparator(a, b) {\n    if (a[0] < b[0]) return 1;\n    if (a[0] > b[0]) return -1;\n    return 0;\n  }\n\n  count (obj, array) {\n    let c = 0\n    for (let n of array) {\n      c += !obj[n]\n    }\n    return c;\n  }\n\n  best_path (id, type, max_tiles) {    \n    console.log(id, type, max_tiles);\n    \n    if (!this.state.data.dep[id]) return \"Not defined\"\n    const memo = []\n    const taken = {[this.state.data.starts[id]]: true}   \n\n    for (let c_id of this.state.data.dep[id][this.state.data.starts[id]].connectedCellIdList) {\n      this.b_path(id, c_id, type, memo, taken, []);\n    }\n    \n    for (let entry of memo.sort(this.Comparator)){\n      if (Object.values(taken).reduce((a, b) => a + b, 0) + this.count(taken, entry[1]) <= max_tiles + 1) {\n        for (let p of entry[1]) {\n          taken[p] = true\n        }\n      }\n    }\n\n    /*let val = 0\n    for (let node of Object.keys(taken)) {\n      if (taken[node] && this.state.data.dep[id][node].enhancementType === type) {\n        val += this.state.data.dep[id][node].effectValue\n      }\n    }*/\n  \n    return taken;\n  }\n\n  b_path (id, node, type, memo, taken, path=[], count=0, curr_val=0) {\n    taken[node] = false\n    count++;\n    path = [...path, node]\n    let obj = this.state.data.dep[id][node];\n    if (obj.enhancementType === type) {\n      curr_val += obj.effectValue;\n      memo.push([curr_val / count, path])\n    }\n    if (obj.connectedCellIdList) {\n      for (let c_id of obj.connectedCellIdList) {\n        this.b_path(id, c_id, type, memo, taken, path, count, curr_val);\n      }\n    }\n  }\n\n  handleChange(event) {\n    console.log(event.target, event.target.value);\n    console.log(this.state);\n    console.log(event.target.type);\n    \n    if (event.target.type === \"select-one\"){\n      console.log(\"this\", event.target.name, event.target.value);\n      \n      this.setState({[event.target.name]: event.target.value}, () => this.handleSubmit(null));\n    } else {\n       this.setState({[event.target.name]: event.target.value ? parseInt(event.target.value) : \"\"});\n    }\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      console.log(this);\n      \n      this.handleSubmit(null);\n    }\n  }\n\n  handleSubmit(event) {\n    console.log(\"updating\");\n    \n    if(this.state.data.dep[this.state.u_id]) {\n      console.log(\"valid\", this.state);\n      \n      this.setState({id: this.state.u_id, type: this.state.u_type, tiles: this.state.u_tiles, taken: this.best_path(this.state.u_id, this.state.u_type, this.state.u_tiles)})\n    } else {\n      this.setState({u_id: \"invalid\"})\n    }\n    //event.preventDefault();\n  }\n\n  createLines(key) {\n    const lines = []\n    let obj = this.state.data.dep[this.state.id][key];\n    \n    if (obj.connectedCellIdList) {\n      for (let c_id of obj.connectedCellIdList) {\n        //console.log(obj.pointX, obj.pointY, this.state.data.dep[this.state.id][c_id].pointX, this.state.data.dep[this.state.id][c_id].pointY);\n        lines.push(<Line key={`${key}-${c_id}`} \n          borderColor={this.state.taken[c_id] ? \"#ff0000\": \"#723131\"}\n          borderStyle={this.state.taken[c_id] ? \"solid\": \"dashed\"}\n          borderWidth={2}\n          x0={obj.pointX + 26} \n          y0={obj.pointY + 15} \n          x1={this.state.data.dep[this.state.id][c_id].pointX + 26} \n          y1={this.state.data.dep[this.state.id][c_id].pointY + 15} \n        />)\n      }\n    }\n    return lines;\n  }\n\n  createBox(Y, X, key) { \n\n    let colour = (this.colours[this.state.data.dep[this.state.id][key].enhancementType]|| {[false]:\"#efe0f0\", [true]:\"#f99eff\"})[this.state.taken[key]] \n    console.log(key, colour, this.state.taken[key]);\n    const styleTop = {\n      position: \"absolute\",\n      left: X + \"px\",\n      top: Y - 15 + \"px\",\n      borderBottomColor: colour,\n    }\n    const styleMid = {\n      position: \"absolute\",\n      left: X + \"px\",\n      top: Y + \"px\",\n      backgroundColor: colour,\n    }\n    const styleBot = {\n      position: \"absolute\",\n      left: X + \"px\",\n      top: Y + 30 + \"px\",\n      borderTopColor: colour,\n    }\n    return (\n      <div key={key}>\n        <div\n          style={styleTop}\n          className=\"hexagon-top\"\n        />      \n        <div\n        style={styleMid}\n        className=\"hexagon\"\n        />      \n        <div\n        style={styleBot}\n        className=\"hexagon-bot\"\n        />\n        {this.createLines(key)}\n      </div>\n    );\n  };\n\n  createBoxes () {\n    const boxes = []\n    for (let [key, value] of Object.entries(this.state.data.dep[this.state.id])) {\n      boxes.push(\n        this.createBox(value.pointY, value.pointX, key)\n      )\n    }\n    return boxes;\n  }\n\n  options() {\n    const opts = []\n    for (let id of Object.keys(this.state.data.starts)){\n      opts.push(<option key={id} value={id}>{id}</option>)\n    }\n    return opts;\n  }\n  \n  render() {\n    return (\n      <div>\n          <label>\n            ID:\n            <select \n              type=\"select\" \n              name=\"u_id\"\n              value={this.state.u_id} \n              onChange={this.handleChange}\n            >\n              {this.options()}\n            </select>\n          </label>\n          <label>\n            Type:\n            <select \n              value={this.state.u_type} \n              onChange={this.handleChange}\n              name=\"u_type\"\n            >\n              <option value=\"ATTACK\">Attack</option>\n              <option value=\"HP\">HP</option>\n              <option value=\"DEFENSE\">Defense</option>\n            </select>\n          </label>\n          <label>\n            Tiles:\n            <input \n              name=\"u_tiles\"\n              type=\"number\" \n              value={this.state.u_tiles} \n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n            />\n          </label>\n          <label>\n            Free:\n            {this.state.tiles - Object.values(this.state.taken).reduce((a, b) => a + b, 0) + 1} \n          </label>\n        <div className=\"boxContainer\">\n          <div className=\"innerBox\">\n            {this.createBoxes()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}